name: CI

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        cc:
          - gcc
          - clang
        make_target:
          - check
          - distcheck
        configure_flags:
          - ''
        include:
          - cc: gcc
            make_target: lcov
            configure_flags: --enable-code-coverage

    steps:
      - uses: actions/checkout@v2

      - name: Install packages
        run: |
          sudo apt-get update -q
          sudo apt-get install -qq \
            automake autotools-dev lcov libedit-dev libeditline-dev libev-dev \
            libncurses-dev libpcre2-dev libssl-dev libtool python-docutils \
            python-sphinx

      - name: Install Varnish Cache
        run: |
          git clone https://github.com/varnishcache/varnish-cache.git ./varnish
          pushd varnish
          ./autogen.sh
          CC='${{ matrix.cc }}' ./configure ${{ matrix.configure_flags }}
          make -sj32
          sudo make PREFIX='/usr/local' install
          sudo ldconfig
          popd

      - name: Install hiredis
        run: |
          wget --no-check-certificate https://github.com/redis/hiredis/archive/v1.0.2.zip -O hiredis-1.0.2.zip
          unzip hiredis-*.zip
          pushd hiredis-*/
          make USE_SSL=1
          sudo make USE_SSL=1 PREFIX='/usr/local' install
          sudo ldconfig
          popd

      - name: Install Redis
        run: |
          wget http://download.redis.io/releases/redis-6.0.10.tar.gz
          tar zxvf redis-*.tar.gz
          pushd redis-*/
          make BUILD_TLS=yes
          sudo make BUILD_TLS=yes PREFIX='/usr/local' install
          sudo ldconfig
          popd

      - name: Build & test VMOD
        run: |
          ./autogen.sh
          ./configure --prefix=/usr ${{ matrix.configure_flags }}
          make -j4
          make ${{ matrix.make_target }} -j1

      - name: Push code coverage
        if: ${{ matrix.make_target == 'lcov' }}
        run: |
          cp libvmod-redis-*-coverage.info codecov.info
          bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy

      - name: Show test report
        if: ${{ failure() }}
        run: |
          cat src/test-suite.log || exit 0
